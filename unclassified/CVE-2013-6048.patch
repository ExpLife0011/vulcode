From 284d7402718d98fcf10cee565415939882abab99 Mon Sep 17 00:00:00 2001
From: Steve Schnepp <steve.schnepp@pwkf.org>
Date: Mon, 28 Oct 2013 19:33:14 +0100
Subject: [PATCH] master: avoid an endless loop in HTML generation

Safeguard to avoid any bigger loop than 100 nested levels. It protects against
application bugs in the parsing code.

Thx Christoph Biedl (debian.axhn@manchmal.in-ulm.de) for noticing
and for providing a patch

Closes: C:CVE-2013-6048
---
 master/lib/Munin/Master/HTMLConfig.pm | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/master/lib/Munin/Master/HTMLConfig.pm b/master/lib/Munin/Master/HTMLConfig.pm
index 9a2d185a0..1b013d4d6 100644
--- a/master/lib/Munin/Master/HTMLConfig.pm
+++ b/master/lib/Munin/Master/HTMLConfig.pm
@@ -176,6 +176,7 @@ sub get_group_tree {
 			 $shrinkpath;
 			 $shrinkpath =~ s/^[^\/]+\/?//, $counter++)
 	    	{
+                die ("Munin::Master::HTMLConfig ran into an endless loop") if ($counter >= 100);
                 $childnode->{'url' . $counter} = $shrinkpath;
             }
 
@@ -218,6 +219,7 @@ sub get_group_tree {
             $shrinkpath =~ /\//;
             $shrinkpath =~ s/^[^\/]+\/*//, $counter++
             ) {
+            die ("Munin::Master::HTMLConfig ran into an endless loop") if ($counter >= 100);
             $obj->{'url' . $counter} = $shrinkpath;
         }
         push @$cats, $obj;
@@ -317,6 +319,7 @@ sub get_group_tree {
             $shrinkpath =~ /\//;
             $shrinkpath =~ s/^[^\/]+\/*//, $counter++
             ) {
+            die ("Munin::Master::HTMLConfig ran into an endless loop") if ($counter >= 100);
             $ret->{'url' . $counter} = $shrinkpath;
         }
     }
